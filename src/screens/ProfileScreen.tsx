import React, { useState } from 'react';
import { ArrowLeft, User, Calendar, Crown, Gift, Copy, Check } from 'lucide-react';
import { User as UserType } from '../types/vpn';

interface ProfileScreenProps {
  onBack: () => void;
  user: UserType | null;
  subscriptionType: string | null;
  daysRemaining: number;
  hasActiveSubscription: boolean;
  telegramUser: any;
}

export const ProfileScreen: React.FC<ProfileScreenProps> = ({ 
  onBack, 
  user, 
  subscriptionType,
  daysRemaining,
  hasActiveSubscription,
  telegramUser 
}) => {
  const [copied, setCopied] = useState(false);
  const [copyError, setCopyError] = useState(false);
  
  // Debug logging
  console.log('üîç ProfileScreen props:', {
    user: !!user,
    subscriptionType,
    daysRemaining,
    hasActiveSubscription,
    telegramUser: !!telegramUser
  });

  const referralCode = user?.referral_code || 'LOADING...';
  
  const copyReferralCode = async () => {
    if (!user?.referral_code) return;
    
    try {
      // Try modern clipboard API first
      if (navigator.clipboard && navigator.clipboard.writeText) {
        await navigator.clipboard.writeText(user.referral_code);
      } else {
        // Fallback for older browsers
        const textArea = document.createElement('textarea');
        textArea.value = user.referral_code;
        textArea.style.position = 'fixed';
        textArea.style.left = '-999999px';
        textArea.style.top = '-999999px';
        document.body.appendChild(textArea);
        textArea.focus();
        textArea.select();
        document.execCommand('copy');
        document.body.removeChild(textArea);
      }
      
      console.log('‚úÖ Referral code copied:', user.referral_code);
      setCopied(true);
      setCopyError(false);
      setTimeout(() => setCopied(false), 2000);
    } catch (err) {
      console.error('Failed to copy:', err);
      setCopyError(true);
      setTimeout(() => setCopyError(false), 2000);
    }
  };

  const formatDate = (dateString?: string) => {
    if (!dateString) return '–ù–µ —É–∫–∞–∑–∞–Ω–æ';
    return new Date(dateString).toLocaleDateString('ru-RU');
  };

  const getSubscriptionStatus = () => {
    if (subscriptionType === 'trial' && hasActiveSubscription) {
      return {
        status: '–ü—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥',
        color: '#10b981',
        icon: Gift,
        details: `–û—Å—Ç–∞–ª–æ—Å—å ${daysRemaining} –¥–Ω.`
      };
    }
    
    if (hasActiveSubscription) {
      return {
        status: '–ê–∫—Ç–∏–≤–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞',
        color: '#6366f1',
        icon: Crown,
        details: `–û—Å—Ç–∞–ª–æ—Å—å ${daysRemaining} –¥–Ω.`
      };
    }

    return {
      status: '–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–∏',
      color: '#94a3b8',
      icon: User,
      details: '–û—Ñ–æ—Ä–º–∏—Ç–µ –ø–æ–¥–ø–∏—Å–∫—É –¥–ª—è –¥–æ—Å—Ç—É–ø–∞'
    };
  };

  const subscriptionInfo = getSubscriptionStatus();
  const StatusIcon = subscriptionInfo.icon;

  // If no user data, show loading
  if (!user && !telegramUser) {
    return (
      <div className="screen active">
        <button className="back-button" onClick={onBack}>
          <ArrowLeft size={20} />
        </button>
        
        <div className="header" style={{ marginTop: '40px' }}>
          <h1>–ü—Ä–æ—Ñ–∏–ª—å</h1>
          <p>–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö...</p>
        </div>

        <div style={{ 
          display: 'flex', 
          justifyContent: 'center', 
          alignItems: 'center', 
          height: '200px',
          color: '#94a3b8'
        }}>
          –ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ—Ñ–∏–ª—è...
        </div>
      </div>
    );
  }

  return (
    <div className="screen active">
      <button className="back-button" onClick={onBack}>
        <ArrowLeft size={20} />
      </button>
      
      <div className="header" style={{ marginTop: '40px' }}>
        <h1>–ü—Ä–æ—Ñ–∏–ª—å</h1>
        <p>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–∞—à–µ–º –∞–∫–∫–∞—É–Ω—Ç–µ</p>
      </div>

      <div className="profile-info">
        {/* User Info Card */}
        <div className="profile-card">
          <div className="profile-avatar">
            <User size={32} />
          </div>
          <div className="profile-details">
            <h3>
              {telegramUser?.first_name || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'} {telegramUser?.last_name || ''}
            </h3>
            {telegramUser?.username && (
              <p className="profile-username">@{telegramUser.username}</p>
            )}
            <p className="profile-id">ID: {telegramUser?.id || user?.telegram_id || 'N/A'}</p>
          </div>
        </div>

        {/* Subscription Status */}
        <div className="subscription-status">
          <div className="status-header">
            <StatusIcon size={24} style={{ color: subscriptionInfo.color }} />
            <div>
              <h4 style={{ color: subscriptionInfo.color }}>{subscriptionInfo.status}</h4>
              <p>{subscriptionInfo.details}</p>
            </div>
          </div>
        </div>

        {/* Profile Stats */}
        <div className="profile-stats">
          <div className="stat-card">
            <Calendar size={20} />
            <div>
              <span className="stat-label">–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏</span>
              <span className="stat-value">{formatDate(user?.created_at)}</span>
            </div>
          </div>

          <div className="stat-card">
            <Gift size={20} />
            <div>
              <span className="stat-label">–°—Ç–∞—Ç—É—Å</span>
              <span className="stat-value">
                {hasActiveSubscription ? '–ê–∫—Ç–∏–≤–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å' : '–ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'}
              </span>
            </div>
          </div>
        </div>

        {/* Referral Code */}
        <div className="referral-code">
          <span style={{ color: '#8892b0' }}>–í–∞—à —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥:</span>
          <span style={{ 
            fontSize: '20px', 
            fontWeight: '700', 
            letterSpacing: '2px',
            color: '#6366f1',
            fontFamily: 'monospace'
          }}>
            {referralCode}
          </span>
          <button 
            className={`copy-button ${copied ? 'copied' : ''} ${copyError ? 'error' : ''}`} 
            onClick={copyReferralCode}
            disabled={!user?.referral_code}
          >
            {copied ? <Check size={12} /> : <Copy size={12} />}
            {copied ? '–°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ!' : copyError ? '–û—à–∏–±–∫–∞!' : '–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å'}
          </button>
        </div>

        {/* Referral Program Info */}
        <div className="referral-steps">
          <h3 style={{ marginBottom: '16px', color: '#ffffff' }}>–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞</h3>
          
          <div className="step">
            <div className="step-number">1</div>
            <div className="step-content">
              <h4>–ü–æ–¥–µ–ª–∏—Ç–µ—Å—å –∫–æ–¥–æ–º</h4>
              <p>–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–π —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–æ–¥ –¥—Ä—É–∑—å—è–º</p>
            </div>
          </div>

          <div className="step">
            <div className="step-number">2</div>
            <div className="step-content">
              <h4>–î—Ä—É–≥ –æ–ø–ª–∞—á–∏–≤–∞–µ—Ç</h4>
              <p>–í–∞—à –¥—Ä—É–≥ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –∫–æ–¥ –ø—Ä–∏ –æ–ø–ª–∞—Ç–µ –ø–æ–¥–ø–∏—Å–∫–∏</p>
            </div>
          </div>

          <div className="step">
            <div className="step-number">3</div>
            <div className="step-content">
              <h4>–ü–æ–ª—É—á–∏—Ç–µ –±–æ–Ω—É—Å—ã</h4>
              <p>–ö–∞–∂–¥–æ–º—É –∏–∑ –≤–∞—Å –¥–æ–±–∞–≤–ª—è—é—Ç—Å—è <span className="bonus-highlight">–±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –¥–Ω–∏</span></p>
            </div>
          </div>
        </div>

        {/* Bonus Info */}
        <div className="bonus-info">
          <h3 style={{ marginBottom: '12px', color: '#6366f1' }}>–ë–æ–Ω—É—Å—ã –∑–∞ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤:</h3>
          <div className="bonus-list">
            <div className="bonus-item">
              <Gift size={16} />
              <span>+7 –¥–Ω–µ–π –∑–∞ –∫–∞–∂–¥–æ–≥–æ –¥—Ä—É–≥–∞</span>
            </div>
            <div className="bonus-item">
              <User size={16} />
              <span>–ù–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π</span>
            </div>
            <div className="bonus-item">
              <Check size={16} />
              <span>–ë–æ–Ω—É—Å—ã –Ω–∞—á–∏—Å–ª—è—é—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏</span>
            </div>
          </div>
        </div>

        {/* Profile Actions */}
        <div className="profile-actions">
          <div className="action-item">
            <span>–Ø–∑—ã–∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞</span>
            <span className="action-value">–†—É—Å—Å–∫–∏–π</span>
          </div>
          <div className="action-item">
            <span>–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</span>
            <span className="action-value">–í–∫–ª—é—á–µ–Ω—ã</span>
          </div>
          <div className="action-item">
            <span>–í–µ—Ä—Å–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è</span>
            <span className="action-value">1.0.0</span>
          </div>
        </div>
      </div>
    </div>
  );
};